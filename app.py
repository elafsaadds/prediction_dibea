import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

@st.cache_data
def load_data():
    return pd.read_csv("diabetes.csv")

@st.cache_resource
def train_model(data):
    X = data.drop("Outcome", axis=1)
    y = data["Outcome"]

    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)

    X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
    model = LogisticRegression()
    model.fit(X_train, y_train)

    return model, scaler

def main():
    st.title("ðŸ©º ØªØ·Ø¨ÙŠÙ‚ Ø§Ù„ØªÙ†Ø¨Ø¤ Ø¨Ù…Ø±Ø¶ Ø§Ù„Ø³ÙƒØ±ÙŠ Ø¨Ø§Ø³ØªØ®Ø¯Ø§Ù… Logistic Regression")

    st.write("Ø£Ø¯Ø®Ù„ Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª Ø§Ù„ØªØ§Ù„ÙŠØ©:")
    pregnancies = st.number_input("Ø¹Ø¯Ø¯ Ù…Ø±Ø§Øª Ø§Ù„Ø­Ù…Ù„", 0, 20, 1)
    glucose = st.number_input("Ù…Ø³ØªÙˆÙ‰ Ø§Ù„Ø¬Ù„ÙˆÙƒÙˆØ²", 0, 200, 100)
    blood_pressure = st.number_input("Ø¶ØºØ· Ø§Ù„Ø¯Ù…", 0, 150, 70)
    skin_thickness = st.number_input("Ø³Ù…Ùƒ Ø§Ù„Ø¬Ù„Ø¯", 0, 100, 20)
    insulin = st.number_input("Ù…Ø³ØªÙˆÙ‰ Ø§Ù„Ø£Ù†Ø³ÙˆÙ„ÙŠÙ†", 0, 900, 80)
    bmi = st.number_input("Ù…Ø¤Ø´Ø± ÙƒØªÙ„Ø© Ø§Ù„Ø¬Ø³Ù…", 0.0, 70.0, 25.0)
    dpf = st.number_input("Ø¹Ø§Ù…Ù„ Ø§Ù„ÙˆØ±Ø§Ø«Ø© (DPF)", 0.0, 3.0, 0.5)
    age = st.number_input("Ø§Ù„Ø¹Ù…Ø±", 1, 120, 30)

    data = load_data()
    model, scaler = train_model(data)

    if st.button("ØªÙˆÙ‚Ø¹"):
        input_data = np.array([[pregnancies, glucose, blood_pressure, skin_thickness, insulin, bmi, dpf, age]])
        input_scaled = scaler.transform(input_data)
        prediction = model.predict(input_scaled)

        if prediction[0] == 1:
            st.error("âš  Ù…Ù† Ø§Ù„Ù…Ø±Ø¬Ø­ Ø£Ù†Ùƒ Ù…ØµØ§Ø¨ Ø¨Ù…Ø±Ø¶ Ø§Ù„Ø³ÙƒØ±ÙŠ.")
        else:
            st.success("âœ… Ù…Ù† ØºÙŠØ± Ø§Ù„Ù…Ø±Ø¬Ø­ Ø£Ù†Ùƒ Ù…ØµØ§Ø¨ Ø¨Ù…Ø±Ø¶ Ø§Ù„Ø³ÙƒØ±ÙŠ.")

if __name__ == "__main__":
    main()